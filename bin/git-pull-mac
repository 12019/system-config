#!/bin/bash

set -e
test $PWD = ~ && cd ~/system-config/
cd "$(dirname "$(lookup-file .git)")"

git-clean-mac-branches-local
git config remote.origin.url $(git config remote.origin.url | perl -npe 's,^git://,https://,')
git fetch origin -v
for x in $( 
    (git branch -a |grep 'remotes.*from-mac'; echo remotes/origin/master) |
    if test -e ~/system-config/etc/branch-fileters/$(relative-path $PWD ~/system-config).sh; then
        bash ~/system-config/etc/branch-fileters/$(relative-path $PWD ~/system-config).sh
    else
        cat
    fi
); do
    remote=$(echo $x|awk -F/ '{print $2}')
    branch=$(echo $x|perl -npe 's/.*?from-mac/from-mac/')
    if git branch --contains $x |grep -q '^\*'; then
	echo no need to merge $branch, it is already '*contained*' in HEAD
	continue;
    else
	git merge $x >/dev/null 2>&1 || {
	    echo $remote/$branch merge failed
	    exit -1
	}
    fi
done

if test -e ~/.crontab.$USER; then
    crontab ~/.crontab.$USER
fi

git submodule init
git submodule update
git submodule foreach 'bash -c "git-pull-mac&"' | grep .
git submodule foreach 'git config user.email baohaojun@gmail.com'
git config user.email baohaojun@gmail.com
fix-submodule-dot-git
~/bin/after-co-ln-s.sh
touch ~/system-config/.for-code-reading
