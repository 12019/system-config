#!/bin/bash
set -ex
. ~/bin/.gitx

test "$(pwd)" = $HOME && cd ~/system-config
cd "$(dirname "$(lookup-file .git)")"

if git-is-ancestor master HEAD; then
    git co -B master
fi

git config remote.origin.url | grep -q baohaojun || exit 0 # this is not my github, do not try to push it.


if test -z "$CHECKING_SUBMODULE"; then
    export CHECKING_SUBMODULE=true
    if git submodule foreach 'bash -c "git-push-mac || echo hello $(pwd) failed&"' | tee /dev/stderr | grep "^hello.*failed$";
    then
        exit -1
    else
        true
    fi
fi

function get-tags()
{
    local tags=()
    local tag=()
    existing_tags=$(find meta/tags/ -type d -exec basename '{}' \;)
    while true; do
        tag=$(select-output-line bash -c "echo done; echo new; arg1-arg2 \"$existing_tags\" \"$(echo ${tags[@]})\" ")
        if test $tag = done; then
            if test "${#tags[@]}" = 0; then
                read -p "Must specifi at least one tag, press any key to continue... "
                continue
            else
                echo "${tags[@]}"
                return
            fi
        fi
        tags=("${tags[@]}" $tag)
    done
}

if git remote -v | grep baohaojun.github.com.git; then
    (
        cd $(dirname $(lookup-file .git))
        for x in *.org; do
            test -f "$x" || continue
            mkdir -p blog/$(today|perl -npe 's!-!/!g')
            git mv $x blog/$(today|perl -npe 's!-!/!g')/ ||
            mv $x blog/$(today|perl -npe 's!-!/!g')/
            git add blog/$(today|perl -npe 's!-!/!g')/$x
        done
    )
    org_changes=$(git st -S|grep -e '\.org$' || true)
    for x in $org_changes; do
        if test -e $x; then
            ./fix-links.pl $x
            if ! grep 'bhj-tags:' $x; then
                tags=$(get-tags)
                echo "# bhj-tags: $tags" >> $x
            fi

            org-export $x
            if test -e "$(basename $org_changes|perl -npe 's/\.org$/.html/')" && [[ "$org_changes" =~ blog/ ]]; then
                if git st -s "$(basename $org_changes|perl -npe 's/\.org$/.html/')" | grep -P -q -e '^\?\?'; then
                    rm "$(basename $org_changes|perl -npe 's/\.org$/.html/')"
                else
                    ./rebuild-old-html.pl "$x"
                fi
            fi
        fi
    done
    if git st -S | grep . ; then
        yes-or-no-p -y "Continue?"
    fi

    if git st -s |grep -e '^A\|^.A\|^D\|^.D'; then
        ./meta/generate-archives.sh
    fi

    git add .
    if git diff HEAD -- $org_changes | grep -P -e '^(-|\+).*bhj-tag'; then
        ./generate-tags.sh
    fi
fi

git add .

while test "$(git log --pretty=oneline -1 | cut -b 42-)" = mf; do
    git reset --soft HEAD^
done

if git status -s | grep . ; then
    git commit -m "$(
        (
            echo "###start of comment###"
            echo in $(pwd):
            git diff -w HEAD | perl -npe 's,^diff --git ,* ,'
            LOCAL=Local
            cat <<EOF
# $LOCAL Variables: #
# mode:org #
# End: #
EOF
        ) | get-stdin
    )" ||true # " to fix the font-lock...
fi

rb=$(from-mac)
if git branch --contains HEAD -a |grep -q from-mac; then
    echo HEAD already containd in a remote branch, no need to push
    exit
fi

function die() {
    echo Error: "$@"
    exit -1
}

git push origin HEAD:refs/heads/$(
    if test -e ~/system-config/etc/branch-fileters/$(relative-path $PWD ~/system-config).sh; then
        bash ~/system-config/etc/branch-fileters/$(relative-path $PWD ~/system-config).sh my-master;
    else
        echo master
    fi
) || die "you need to merge it!"

if test $(pwd) = ~/system-config; then
    CHECKING_SUBMODULE= git-notify-push
fi

exit 0;
