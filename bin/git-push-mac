#!/bin/bash
set -ex
. ~/bin/.gitx

(
    flock 9
    d2u ~/.netrc
) 9< ~/bin/.gitx

if lookup-file -e .repo/manifest.xml; then
    git commit -s
    git push $(repo-remote) HEAD:$(repo-branch)
    exit
fi

test "$(pwd)" = $HOME && cd ~/system-config
cd "$(dirname "$(lookup-file .git)")"

if test -e .git-push-mac-hooks; then
    bash .git-push-mac-hooks
fi

if git-is-ancestor master HEAD; then
    command git co -B master
fi

command git config remote.origin.url | grep -q -P -e 'baohaojun|bhj' || exit 0 # this is not my github, do not try to push it.

git-interactive-add


if output=$(
        git submodule foreach 'bash -c "git-push-mac || echo hello $(pwd) failed&"' |
        tee /dev/stderr |
        grep "^hello.*failed$"
    )
then
    echo "$output"
    exit -1
else
    true
fi

function get-tags()
{
    local tags=()
    local tag=()
    existing_tags=$(find meta/tags/ -type d -exec basename '{}' \;)
    while true; do
        tag=$(select-output-line -- bash -c "echo done; echo new; arg1-arg2 \"$existing_tags\" \"$(echo ${tags[@]})\" ")
        if test $tag = done; then
            if test "${#tags[@]}" = 0; then
                read -p "Must specifi at least one tag, press any key to continue... "
                continue
            else
                echo "${tags[@]}"
                return
            fi
        fi
        tags=("${tags[@]}" $tag)
    done
}

if git remote -v | grep baohaojun.github.com.git; then
    (
        cd $(dirname $(lookup-file .git))
        for x in *.org; do
            test -f "$x" || continue
            mkdir -p blog/$(today|perl -npe 's!-!/!g')
            git mv $x blog/$(today|perl -npe 's!-!/!g')/ ||
            mv $x blog/$(today|perl -npe 's!-!/!g')/
            git add blog/$(today|perl -npe 's!-!/!g')/$x
        done
    )
    org_changes=$(git st -S|grep -e '\.org$' || true)
    git add $org_changes
    for x in $org_changes; do
        if test -e $x; then
            ./fix-links.pl $x
            if ! grep 'bhj-tags:' $x; then
                tags=$(get-tags)
                echo "# bhj-tags: $tags" >> $x
            fi

            org-export $x

            if grep -e '<sub>' "${x/%.org/.html}"; then
                yes-or-no-p "Do you think the above <sub>s are expected?"
            fi
            if test -e "$(basename $x|perl -npe 's/\.org$/.html/')" && [[ "$x" =~ blog/ ]]; then
                if git st -s "$(basename $x|perl -npe 's/\.org$/.html/')" | grep -P -q -e '^\?\?'; then
                    rm "$(basename $x|perl -npe 's/\.org$/.html/')"
                elif test "$(basename "$x")" != index.org; then
                    ./rebuild-old-html.pl "$x"
                fi
            fi
        fi
    done
    if test "$org_changes"; then
        generate-atom.xml.sh
    fi
    last_org=$(find blog -name '*.org'|sort -n|tail -n 1)
    if git st -s "$last_org" | grep .; then
        ./rebuild-old-html.pl "$last_org"
        mv "$(basename "$last_org" | perl -npe 's/\.org$/.html/')" index.html
    fi

    if git st -S | grep . ; then
        yes-or-no-p -y "Continue?"
    fi

    if git st -s |grep -e '^A\|^.A\|^D\|^.D'; then
        ./meta/generate-archives.sh
    fi

    git add .
    if git diff HEAD -- $org_changes | grep -P -e '^(-|\+).*bhj-tag'; then
        ./generate-tags.sh
    fi
fi

git add .

while test "$(git log --pretty=oneline -1 | cut -b 42-)" = mf; do
    if git config remote.origin.url | grep bhj.dyndns.org; then
        break
    fi
    git reset --soft HEAD^
done

if git status -s | grep . ; then
    git commit -s -m "$(
        (
            echo "###start of comment###"
            echo in $(pwd):
            git diff -w HEAD | perl -npe 's,^diff --git ,* ,'
            LOCAL=Local
            cat <<EOF
# $LOCAL Variables: #
# mode:org #
# End: #
EOF
        ) | get-stdin
    )" ||true # " to fix the font-lock...
fi

function die() {
    echo Error: "$@"
    exit -1
}

branch=$(
    if test -e ~/system-config/etc/branch-fileters/$(relative-path $PWD ~/system-config).sh; then
        bash ~/system-config/etc/branch-fileters/$(relative-path $PWD ~/system-config).sh my-master;
    else
        echo master
    fi
)

if test "$(git symbolic-ref --short HEAD)" != $branch; then
    if git-is-ancestor $branch HEAD; then
        git co -B $branch
    fi
fi

if git diff --quiet origin/$branch; then
    echo HEAD already containd in a remote $branch, no need to push
    exit
fi

if git-is-ancestor HEAD origin/$branch; then
    git co -B $branch origin/$branch
    exit
fi

git pull --rebase
git push origin HEAD:refs/heads/$branch || die "you need to merge it!"

if test $(pwd) = ~/system-config; then
    CHECKING_SUBMODULE= git-notify-push
fi

exit 0;
