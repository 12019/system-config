#!/bin/bash

function git_svn() {
    case "$1" in
        fetch)
            command git svn fetch
            ;;
        pull)
            command git svn rebase
            ;;
        push)
            command git svn dcommit
            ;;
        remote)
            ;;
        diff)
            args=()
            for x in "$@"; do
                if test "$x" = origin/master; then
                    x=git-svn
                fi
                args=("${args[@]}" "$x")
            done
            set -- "${args[@]}"
            command git "$@"
            ;;
        *)
            NO_SVN_CHECK=true git "$@"
            ;;
    esac
}

function git()
{
    if test $# = 1 -a "$1" = st; then
        echo only stat the current folder 1>&2
        set -- st .
    fi
    if test "$NO_SVN_CHECK" != true && command git config svn-remote.svn.url | grep -q .; then
        git_svn "$@"
        return $?
    fi

    (
        builtin cd -P .
        if test "$(readlink -f .)" = "$(readlink -f ~)" -a "$1" != clone ||
            test "$(readlink -f .)" = "$(readlink -f ~/system-config/)"
        then
            cd ~/system-config/;
            if test "$1" = st; then
                for x in ~/src/github/*/; do
                    if test -d $x; then
                        (
                            cd $x

                            y=$(git st -s)
                            if test "$y"; then
                                echo $x not clean 1>&2
                                git st -s
                                echo ---------------- 1>&2
                                exit 0
                            fi
                            y=$(git diff --name-status origin/master)
                            if test "$y"; then
                                echo $x not clean 1>&2
                                git diff --name-status origin/master
                                echo ---------------- 1>&2
                            fi
                        )
                    fi
                done
            fi

            if test "$1" = submodule -a "$2" = foreach -a $# = 3; then
                for x in ~/src/github/*/; do
                    if test -d $x; then
                        (
                            cd $x
                            bash -c "$3"
                        )
                    fi
                done
            fi
        fi

        if test "$1" = st -a "$2" = -S; then
            command git status -s | perl -ne '
chomp();
if (m/^..."/) {
    s/(".*?")/eval($1)/ge;
}
print $_ . "\n";
'
          exit
        fi
        if test "$1" = clean; then
            if command git st -s | grep '??'; then
                echo Warning: git not clean, will not clean it
                if yes-or-no-p -n "Continue?"; then
                    true;
                else
                    echo Please use: command git clean -xfd
                    exit -1
                fi
            fi
        fi

        if test $# = 3 -a "$1" = co -a "$2" = -B; then
            if git-is-ancestor "$3" HEAD; then
                command git "$@"
                exit 0
            else
                exit 1
            fi
        fi

        if test "$1" = co -a $# = 2; then
            command git "$@" || {
                git fetch -v $(repo-remote) || true
                git co $(git-choose-branch "$2")
            }
            exit
        fi

        if test "$1" = commit; then
            if test "$(arg1-arg2 -s "$@")" = -s && yes-or-no-p -y "Add signed-off-by?"; then
                shift
                set -- commit -s "$@"
            fi
        fi

        command git "$@"
    )

}
