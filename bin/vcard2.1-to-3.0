#!/usr/bin/perl

# BEGIN:VCARD
# VERSION:2.1
# N;CHARSET=UTF-8;ENCODING=QUOTED-PRINTABLE:;=E7=88=B1=E7=8F=8D=E8=91=A3=E5=BE=B7=2F=4D;;;
# FN;CHARSET=UTF-8;ENCODING=QUOTED-PRINTABLE:=E7=88=B1=E7=8F=8D=E8=91=A3=E5=BE=B7=2F=4D
# TEL;CELL;PREF:13588611073
# END:VCARD


use strict;

my @tels;
my $name;
my $fn;

my %names_tel_map;
my %tel_name_map;
sub decode_qp($)
{
    my ($q) = @_;
    use POSIX;
    $q =~ s/=(..)/chr(strtol('0x' . $1))/ge;
    return $q;
}



while (<>) {
    chomp;
    $_ =~ s/\r//g;
    if (m/BEGIN:VCARD/) {
        @tels = ();
        $name = $fn = '';
    }

    if (m/^N;CHARSET=UTF-8;ENCODING=QUOTED-PRINTABLE:;?((=..)*)/) {
        $name = decode_qp($1);
        $name =~ s!/.*!!;
    }
    if (m/TEL;CELL/) {
        if (m/TEL;CELL:(?:\+86)?(\d+)$/) {
            push @tels, $1;
        } elsif (m/TEL;CELL;PREF:(?:\+86)?(\d+)$/) {
            push @tels, $1;
        } else {
            warn "not matching tel: $_";
        }
    }

    if (m/END:VCARD/) {
        if (not $name) {
        }
        $names_tel_map{$name} = {} unless exists $names_tel_map{$name};

        for my $tel (@tels) {
            $names_tel_map{$name}{$tel} = 1;
            $tel_name_map{$tel} = {} unless exists $tel_name_map{$tel};
            $tel_name_map{$tel}{$name} = 1;
        }
    }
}

for my $name (sort keys %names_tel_map) {
    for my $name2 (keys %names_tel_map) {
        if ($name ne $name2 and substr($name2, 0, length($name)) eq $name) {
            for (keys $names_tel_map{$name}) {
                $names_tel_map{$name2}{$_} = 1;
            }
            $names_tel_map{$name} = {}
        }
    }
}

for my $name (sort keys %names_tel_map) {
    if (%{$names_tel_map{$name}}) {
# BEGIN:VCARD
# VERSION:3.0
# FN:不锈钢
# N:不锈钢;;;;
# TEL;TYPE=CELL:13174907539
# END:VCARD


        my $tel_str = '';
        for my $tel (keys %{$names_tel_map{$name}}) {
            $tel_str .= "\nTEL;TYPE=CELL:$tel"
        }

        print <<EOF
BEGIN:VCARD
VERSION:3.0
FN:$name
N:$name;;;;$tel_str
END:VCARD
EOF
    }
}
