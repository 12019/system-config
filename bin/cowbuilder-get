#!/bin/bash

set -e

if test -L /var/cache/pbuilder -a ! -e /var/cache/pbuilder; then
    sudo mkdir -p $(readlink -m /var/cache/pbuilder)
fi

scriptd=/usr/share/debootstrap/scripts
systems=$(
    cd /usr/share/debootstrap/scripts;
    for x in *; do
        if echo $x | grep -q "\."; then
            continue
        fi
        if grep -q ubuntu.com $scriptd/$x; then
            echo ubuntu-$x
        else
            echo debian-$x
        fi
    done
)

if test $# = 0; then
    while true; do
        system=$(select-args $systems)
        arch=$(select-args amd64 i386)
        $0 $system-$arch
    done
fi


target=$1
system_archs=$(
    for system in $systems; do
        for arch in i386 amd64; do
            if ! echo $system-$arch|grep -q "$target"; then
                continue
            fi
            if echo $system-$arch|grep -q -e '\*'; then
                continue
            fi
            echo $system-$arch
        done
    done
)

echo will generate $system_archs

for system_arch in $system_archs; do
    system=${system_arch%-*}
    arch=${system_arch##*-}
    basepath=~/external/cowbuilder/$system_arch/bare
    sudo rm $(dirname $basepath)/bare -rf
    mkdir $basepath -p
    components='main contrib non-free'
    extra_args=
    if echo $system|grep ubuntu; then
        components='main universe multiverse'
        gpgpath=~/external/ubuntu-keyring/usr/share/keyrings/ubuntu-archive-keyring.gpg
        extra_args="--keyring $gpgpath --debootstrapopts --keyring=$gpgpath"
    fi

    sysname=${system%-*} #debian/ubuntu
    dist=${system#*-} #lucid/testing

    sudo unshare -m -- bash -c "
        mkdir -p $basepath/base.cow2
        mount -t tmpfs none $basepath/base.cow2 -o size=2000000k
        command sudo cowbuilder --create --basepath $basepath/base.cow2/base --mirror http://r66:9999/$sysname --distribution $dist --components \"$components\" $extra_args --architecture $arch --buildplace $basepath/base.cow2
        if test $dist = lucid; then
            sudo perl -npe 'if (m/'$dist'/) {\$back = \$_; \$back =~ s/'$dist'/'$dist'-backports/; print \$back}' -i $basepath/base.cow2/base/etc/apt/sources.list
            sudo cowbuilder --update --basepath $basepath/base.cow2/base --buildplace $basepath/base.cow2
        fi
        echo -n copying back the base files...\ ;
        mv $basepath/base.cow2/base $basepath/base.cow
        echo done
    "
done 2>&1 | grep --line-buffered -i -v 'create hard link.*invalid cross-device link' | time tee ~/.logs/$(basename $0).log
