#!/bin/bash

function push-url() {
    ring=$1
    shift
    if test "$1" = -new-tab; then
	shift
    fi

    (echo "$@"; cat "$ring" 2>/dev/null)|
    uniq-even-non-ajacent |head -n 50 > "$ring.$$"
    mv "$ring".$$ "$ring"
}

function pop-url() {
    ring=$1
    shift
    
    perl -ne 'BEGIN{$url = "'"$1"'"} print if m!\Q$url\E!..0' "$ring" | perl -ne 'print if 2..0' > "$ring".$$
    mv "$ring".$$ "$ring"
}    

export -f push-url pop-url
    
if test "$1" = -new-tab; then
    push-url ~/.logs/firefox-tab-ring "$(get-firefox-tab-url)"
fi

if test "$1" = pop; then
    (
	flock 9
        cat ~/.logs/firefox-tab-ring | xargs -d \\n \
            bash -c '
                for x in "$@"; do
                    if test "$(get-firefox-tab-url)" = "$x"; then
                        push-url ~/.logs/firefox-tab-ring.pop "$x"
                        echo "will skip $x"
                        continue;
                    fi
                    if $(firefox-search-for-tab "\Q$x\E"); then
                       echo "will open $x"
                       push-url ~/.logs/firefox-tab-ring.pop "$x"
                       pop-url ~/.logs/firefox-tab-ring "$x"
                       break
                   fi
               done
           ' true
    ) 9<~/.bashrc
    exit
fi

if test "$1" = push; then
    if test $# -gt 1; then
	shift
	push-url ~/.logs/firefox-tab-ring "$@"
    else
	(
	    flock 9
            cat ~/.logs/firefox-tab-ring.pop | xargs -d \\n \
                bash -c '
                    for x in "$@"; do
                        if test "$(get-firefox-tab-url)" = "$x"; then
                            push-url ~/.logs/firefox-tab-ring "$x"
                            echo "will skip $x"
                            continue;
                        fi
                        if $(firefox-search-for-tab "\Q$x\E"); then
                           echo "will open $x"
                           push-url ~/.logs/firefox-tab-ring "$x"
                           pop-url ~/.logs/firefox-tab-ring.pop "$x"
                           break
                       fi
                   done
               ' true
	) 9<~/.bashrc
    fi
    exit
    
fi

if test $# = 1; then
    set -- -new-tab "$@"
fi

if test "$1" = -current-tab; then
    shift
fi

if test -x ~/external/firefox/firefox; then
   ~/external/firefox/firefox "$@";
fi
